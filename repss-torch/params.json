{
    "__TIME__" : 1,
    "__PREPROCESSING__" : 0,
    "__MODEL_SUMMARY__" : 0,
    "options":{
        "parallel_criterion" : 0,
        "parallel_criterion_comment" : "TODO need to verification",
        "set_gpu_device" : "9"
    },
    "params":
    {
        "save_root_path": "C:/preprocessed_dataset/",
        "data_root_path": "C:/VIPL_HR/data/",
        "dataset_name": "VIPL_HR",
        "checkpoint_path" : "C:/checkpoint/",
        "train_ratio": 0.9,
        "train_ratio_comment" : "generate train dataset using train_ratio",
        "validation_ratio": 0.6,
        "validation_ratio_comment" : "split train dataset using validation_ratio",
        "train_batch_size" : 1,
        "train_shuffle" : 0,
        "test_batch_size" : 1,
        "test_shuffle" : 0
    },
    "hyper_params":
    {
        "loss_fn": "neg_pearson",
        "loss_fn_comment":
               [
                   "mse","L1","neg_pearson","multi_margin","bce","huber","cosine_embedding",
                   "cross_entropy","ctc","bce_with_logits","gaussian_nll","hinge_embedding",
                   "KLDiv","margin_ranking","multi_label_margin","multi_label_soft_margin",
                   "nll","nll2d","pairwise","poisson_nll","smooth_l1","soft_margin",
                   "triplet_margin","triplet_margin_distance"
               ],
        "optimizer": "adam",
        "inner_optimizer" : "sgd",
        "optimizer_comment":
                [
                    "adam","sgd","rms_prop","ada_delta","ada_grad","ada_max",
                    "ada_mw","a_sgd","lbfgs","n_adam","r_adam","rprop","sparse_adam"
                ],
        "learning_rate": 0.001,
        "learning_rate_comment": [
            "DeepPhys : lr = 1",
            "PhysNet : lr = 0.001",
            "MetaPhys : lr = 0.001"
        ],
        "epochs" : 30
    },
    "meta_params":
    {
        "pre_trained" : 0,
        "pre_trained_comment" : "pretrained or not"
    },
    "model_params":
    {
        "name": "PhysNet",
        "name_comment":
                [
                    "DeepPhys",
                    "PhysNet",
                    "MetaPhys",
                    "MetaPhysNet",
                    "MMAML_Phys"
                ]
    }
}